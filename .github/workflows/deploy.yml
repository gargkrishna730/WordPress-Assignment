name: 🚀 WordPress Deployment Pipeline

on:
  push:
    branches: [ master ]
    paths:
      - 'wordpress-project/**'
      - 'config/nginx/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 0 * * 0'  # 📅 Weekly backup & security scan
  workflow_dispatch:
    inputs:
      force_backup:
        description: '🔄 Force database backup'
        required: true
        type: boolean
        default: false

jobs:
  code-analysis:
    name: 🔍 Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v2

      - name: 🛠️ Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: phpcs, phpmd

      - name: 🔎 PHP Lint
        run: |
          if [ -d "wordpress-project" ]; then
            find wordpress-project -name "*.php" -exec php -l {} \;
          else
            echo "WordPress project directory not found"
            exit 1
          fi

      - name: 🧪 PHPCS Check
        run: |
          if [ -d "wordpress-project" ]; then
            phpcs --standard=WordPress wordpress-project || true
          else
            echo "WordPress project directory not found"
            exit 1
          fi

      - name: 🕵️ PHP Mess Detector
        run: |
          if [ -d "wordpress-project" ]; then
            phpmd wordpress-project text cleancode,codesize,controversial,design,naming,unusedcode || true
          fi

  deploy:
    name: 🚀 Deploy
    needs: [code-analysis]
    runs-on: self-hosted
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v2
        with:
          path: repo
          fetch-depth: 0

      - name: 💾 Backup Database
        run: |
          BACKUP_DATE=$(date +%Y%m%d_%H%M%S)
          BACKUP_FILE="wordpress_db_${BACKUP_DATE}.sql"
          
          mysqldump -u ${{ secrets.DB_USER }} -p${{ secrets.DB_PASSWORD }} wordpress > "/tmp/${BACKUP_FILE}"
          gzip "/tmp/${BACKUP_FILE}"
          
          # Upload to S3 with standard server-side encryption
          aws s3 cp "/tmp/${BACKUP_FILE}.gz" \
            "s3://${{ secrets.S3_BUCKET }}/database-backups/${BACKUP_FILE}.gz" \
            --sse AES256
          
          rm "/tmp/${BACKUP_FILE}.gz"

      - name: 🔍 Verify WordPress Core
        run: |
          cd repo/wordpress-project
          wp core verify-checksums --allow-root || echo "Core verification failed"

      - name: 🔄 Deploy Changes
        run: |
          # Copy theme and plugin changes
          sudo rsync -av --exclude='wp-config.php' \
              --exclude='wp-content/uploads' \
              --exclude='.git' \
              repo/wordpress-project/wp-content/themes/ /var/www/wordpress/wp-content/themes/
          
          sudo rsync -av --exclude='.git' \
              repo/wordpress-project/wp-content/plugins/ /var/www/wordpress/wp-content/plugins/

          # Update NGINX configuration if changed
          if [ -f "repo/config/nginx/wordpress.conf" ]; then
            if ! cmp -s repo/config/nginx/wordpress.conf /etc/nginx/sites-available/wordpress; then
              sudo cp repo/config/nginx/wordpress.conf /etc/nginx/sites-available/wordpress
              sudo nginx -t && sudo systemctl restart nginx
            fi
          fi

          # Set permissions
          sudo chown -R www-data:www-data /var/www/wordpress
          sudo find /var/www/wordpress/ -type d -exec chmod 755 {} \;
          sudo find /var/www/wordpress/ -type f -exec chmod 644 {} \;

          # Clean cache
          wp cache flush --allow-root
          wp rewrite flush --allow-root

  security-scan:
    name: 🔒 Security Scan
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: 🛠️ Install Security Tools
        run: |
          sudo gem install wpscan
          sudo apt-get update && sudo apt-get install -y nmap nikto

      - name: 🔍 Run Security Scans
        run: |
          wpscan --url ${{ secrets.SITE_URL }} \
            --format cli-no-color \
            --random-user-agent \
            --detection-mode aggressive \
            --output scan-results.txt || true

          nmap -sV --script=http-wordpress-enum ${{ secrets.SITE_URL }} -oN nmap-results.txt || true
          
          nikto -h ${{ secrets.SITE_URL }} -Format txt -o nikto-results.txt || true

      - name: 📊 Generate Security Report
        run: |
          echo "# 🔒 Security Scan Results" > security-report.md
          echo "## 🔍 WPScan Results" >> security-report.md
          cat scan-results.txt >> security-report.md
          echo "## 🔍 Nmap Results" >> security-report.md
          cat nmap-results.txt >> security-report.md
          echo "## 🔍 Nikto Results" >> security-report.md
          cat nikto-results.txt >> security-report.md

  notify:
    name: 📧 Notifications
    needs: [deploy, security-scan]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: 📧 Send Status Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "🚀 WordPress Deployment Status - ${{ github.repository }}"
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: WordPress CI/CD <${{ secrets.EMAIL_USERNAME }}>
          html_body: |
            <h2>🚀 WordPress Deployment Report</h2>
            <p>Status: ${{ needs.deploy.result == 'success' && '✅ Success' || '❌ Failed' }}</p>
            
            <h3>📊 Deployment Details:</h3>
            <ul>
              <li>💾 Backup Status: ${{ needs.backup-database.result || 'Completed' }}</li>
              <li>🌿 Branch: ${{ github.ref_name }}</li>
              <li>📝 Commit: <code>${{ github.sha }}</code></li>
            </ul>
            
            <h3>🔒 Security Status:</h3>
            <p>Scan Status: ${{ needs.security-scan.result == 'success' && '✅ Complete' || '⚠️ Failed' }}</p>
            
            <h3>🔗 Quick Links:</h3>
            <ul>
              <li>🌐 <a href="${{ secrets.SITE_URL }}">View Website</a></li>
              <li>📋 <a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}">View Workflow Run</a></li>
            </ul>