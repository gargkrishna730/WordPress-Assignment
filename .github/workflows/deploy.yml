name: üíæ WordPress Deployment

on:
  push:
    branches: [ master ]
    paths:
      - 'wordpress-project/**'
      - 'config/nginx/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ master ]
    paths:
      - 'wordpress-project/**'
      - 'config/nginx/**'
  schedule:
    - cron: '0 0 * * 0'  # ‚è∞ Run weekly for full security scanning

jobs:
  quick-analyze:
    name: üìÉ Quick Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: üìö Checkout repository
        uses: actions/checkout@v2

      - name: ‚öôÔ∏è Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: phpcs

      - name: ‚ú® PHP Lint
        run: |
          find wordpress-project -name "*.php" -exec php -l {} \;

  deploy:
    needs: quick-analyze
    runs-on: self-hosted
    if: success()
    steps:
      - name: üìö Checkout repository
        uses: actions/checkout@v2
        with:
          path: repo
          fetch-depth: 0

      - name: üìù Format Commit Message
        id: format_commits
        run: |
          cd repo
          commit_message=$(git log -1 --pretty=format:"%s")
          echo "FORMATTED_MESSAGES=* ${commit_message}" >> $GITHUB_ENV

      - name: üåê Deploy Changes
        run: |
          sudo rsync -av --exclude='wp-config.php' \
              --exclude='wp-content/uploads' \
              --exclude='.git' \
              repo/wordpress-project/wp-content/themes/ /var/www/wordpress/wp-content/themes/
          
          sudo rsync -av --exclude='.git' \
              repo/wordpress-project/wp-content/plugins/ /var/www/wordpress/wp-content/plugins/
          
          if ! cmp -s repo/config/nginx/wordpress.conf /etc/nginx/sites-available/wordpress; then
            sudo cp repo/config/nginx/wordpress.conf /etc/nginx/sites-available/wordpress
            sudo nginx -t && sudo systemctl restart nginx
          fi
          
          sudo chown -R www-data:www-data /var/www/wordpress
          sudo find /var/www/wordpress/ -type d -exec chmod 755 {} \;
          sudo find /var/www/wordpress/ -type f -exec chmod 644 {} \;
          
          rm -rf repo

      - name: üìß Send Deployment Success Email
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "üöÄ WordPress Deployment Successful - ${{ github.repository }}"
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: WordPress CI/CD <${{ secrets.EMAIL_USERNAME }}>
          html_body: |
            <h2>üöÄ WordPress Deployment Successful</h2>
            <p>Your WordPress site has been successfully deployed.</p>
            <p>Site URL: <a href="${{ secrets.SITE_URL }}">${{ secrets.SITE_URL }}</a></p>

      - name: ‚ö†Ô∏è Send Deployment Failure Email
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "üö® WordPress Deployment Failed - ${{ github.repository }}"
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: WordPress CI/CD <${{ secrets.EMAIL_USERNAME }}>
          html_body: |
            <h2>üö® WordPress Deployment Failed</h2>
            <p>The deployment of your WordPress site has failed. Please review the logs for more details.</p>
            <p>Site URL: <a href="${{ secrets.SITE_URL }}">${{ secrets.SITE_URL }}</a></p>

  security-scan:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: üîí Run WPScan
        run: |
          sudo gem install wpscan
          wpscan --url ${{ secrets.SITE_URL }} \
            --format cli \
            --random-user-agent \
            --output scan-results.txt
          echo "<html><head><title>WPScan Results</title>" > scan-results.html
          echo "<style>
            body { font-family: Arial, sans-serif; margin: 20px; }
            h1 { color: #2c3e50; }
            .warning { color: #e74c3c; }
            .info { color: #3498db; }
            pre { background: #f8f9fa; padding: 15px; border-radius: 5px; }
          </style></head><body>" >> scan-results.html
          echo "<h1>‚ö° WPScan Security Report</h1>" >> scan-results.html
          echo "<h2>Scan Date: $(date)</h2>" >> scan-results.html
          echo "<h2>Target: ${{ secrets.SITE_URL }}</h2>" >> scan-results.html
          echo "<pre>" >> scan-results.html
          cat scan-results.txt >> scan-results.html
          echo "</pre></body></html>" >> scan-results.html

      - name: üìù Upload scan results
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: |
            scan-results.html
            scan-results.txt